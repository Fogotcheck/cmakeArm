cmake_minimum_required(VERSION 3.26.4)

set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR ARM)
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_EXECUTABLE_SUFFIX ".elf")

set(CMAKE_C_COMPILER_WORKS ON)
set(CMAKE_CXX_COMPILER_WORKS ON)

# Установка компилятора и пути к инструментам
set(CMAKE_C_COMPILER arm-none-eabi-gcc)
set(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER arm-none-eabi-as)
set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
set(CMAKE_SIZE arm-none-eabi-size)

# set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM     NEVER)
# set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY     ONLY)
# set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE     ONLY)
project(Artery VERSION 0.1.0 LANGUAGES C ASM)

set(SRC_LIST "./main/main.c"
    "./main/main.h"
    "${CMAKE_SOURCE_DIR}/mztaSystemCallStubs/NewLibCallStabs.c"
)
set(LINKER_SCRIPT "${CMAKE_CURRENT_LIST_DIR}/AT32F435_437_Firmware_Library/libraries/cmsis/cm4/device_support/startup/gcc/linker/AT32F437xM_FLASH.ld")
set(COMMON_FLAGS "-mcpu=cortex-m4 -mthumb -mfloat-abi=hard -mfpu=fpv4-sp-d16 -Wall")

# Опции компилятора
set(CMAKE_C_FLAGS ${COMMON_FLAGS})
set(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -std=c++11")
set(CMAKE_EXE_LINKER_FLAGS "${COMMON_FLAGS} -T${LINKER_SCRIPT}")

add_executable(${PROJECT_NAME}.elf ${SRC_LIST})

# Опции дополнительной сборки
add_custom_command(
    TARGET ${PROJECT_NAME}.elf POST_BUILD
    COMMAND ${CMAKE_OBJCOPY} -O binary ${PROJECT_NAME}.elf ${PROJECT_NAME}.bin
    COMMAND ${CMAKE_OBJCOPY} -O ihex ${PROJECT_NAME}.elf ${PROJECT_NAME}.hex
    COMMAND ${CMAKE_OBJDUMP} -S ${PROJECT_NAME}.elf > ${PROJECT_NAME}.S
    COMMAND ${CMAKE_NM} -n ${PROJECT_NAME}.elf > ${PROJECT_NAME}.map
    COMMAND ${CMAKE_SIZE} ${PROJECT_NAME}.elf
)

# TODO: Для видимости в проекте открыл доступ, необходимо закрыть/частично закрыть доступ к данным файлам
target_include_directories(${PROJECT_NAME}.elf PUBLIC
    "${CMAKE_SOURCE_DIR}/AT32F435_437_Firmware_Library/libraries/cmsis/cm4/core_support"
    "${CMAKE_SOURCE_DIR}/AT32F435_437_Firmware_Library/libraries/cmsis/cm4/device_support"
    "${CMAKE_SOURCE_DIR}/AT32F435_437_Firmware_Library/libraries/cmsis/cm4"
    "${CMAKE_SOURCE_DIR}/AT32F435_437_Firmware_Library/libraries/drivers/inc"
    "${CMAKE_SOURCE_DIR}/AT32F435_437_Firmware_Library/libraries/drivers/src"
    "${CMAKE_SOURCE_DIR}/ExtLibs/PlatformLibs/clockSettings"
)

# Добавляет к проекту настройки платформы зависимости -> 
# - cmake\cmsis\clockSettings
target_link_libraries(${PROJECT_NAME}.elf cmsisLib)
add_subdirectory("${CMAKE_SOURCE_DIR}/ExtLibs/PlatformLibs")
