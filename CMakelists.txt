cmake_minimum_required(VERSION 3.26.4)

set(CMAKE_TRY_COMPILE_TARGET_TYPE "STATIC_LIBRARY")
set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR ARM)
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_EXECUTABLE_SUFFIX ".elf")

set(CMAKE_C_COMPILER_WORKS ON)
set(CMAKE_CXX_COMPILER_WORKS ON)

# Установка компилятора и пути к инструментам
set(CMAKE_C_COMPILER arm-none-eabi-gcc)
set(CMAKE_CXX_COMPILER arm-none-eabi-g++)
set(CMAKE_ASM_COMPILER arm-none-eabi-as)
set(CMAKE_OBJCOPY arm-none-eabi-objcopy)
set(CMAKE_SIZE arm-none-eabi-size)

#set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM     NEVER)
#set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY     ONLY)
#set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE     ONLY)


project(main VERSION 0.1.0 LANGUAGES C)

set(Boost_USE_STATIC_LIBS OFF)
set(Boost_USE_MULTITHREADED ON)
set(Warnings "-Wall -Wextra -Wshadow -Wpointer-arith -Wcast-align -Wsign-compare -Wmissing-declarations -Wunused")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c11 ${Warnings}")

set(SRC_LIST "./main/main.c"
            "./main/main.h"
            "${CMAKE_SOURCE_DIR}/mztaSystemCallStubs/NewLibCallStabs.c"
)
add_executable(${PROJECT_NAME}.elf ${SRC_LIST})

target_link_libraries(${PROJECT_NAME}.elf NewlibCallStabs)
add_subdirectory(mztaSystemCallStubs)